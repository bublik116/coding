import json
import os

class Book:
    def __init__(self, name, author, year):
        self.name = name
        self.author = author
        self.year = year
    
    def get_info(self):
        return f"{self.name} ({self.author}, {self.year})"
    
    def to_dict(self):
        return {
            "name": self.name,
            "author": self.author,
            "year": self.year
        }

    @classmethod
    def from_dict(cls, data):
        return cls(data["name"], data["author"], data["year"])

class Library:
    def __init__(self):
        self.books = []
        self.load()  # –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    
    def new_book(self, book):
        self.books.append(book)
        print(f"‚úÖ –ö–Ω–∏–≥–∞ '{book.name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        self.save()
    
    def del_book(self, book_name):
        for book in self.books:
            if book.name == book_name:
                self.books.remove(book)
                print(f"‚ùå –ö–Ω–∏–≥–∞ '{book_name}' —É–¥–∞–ª–µ–Ω–∞")
                self.save()
                return
        print(f"‚ö†Ô∏è –ö–Ω–∏–≥–∞ '{book_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    def show_books(self):
        if not self.books:
            print("üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞")
        else:
            print("\nüìö –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥:")
            for i, book in enumerate(self.books, 1):
                print(f"{i}. {book.get_info()}")
    
    def save(self, filename="library.json"):
        try:
            with open(filename, "w", encoding="utf-8") as f:
                json.dump(
                    [book.to_dict() for book in self.books],
                    f,
                    ensure_ascii=False,
                    indent=2
                )
        except Exception as e:
            print(f"üî• –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    def load(self, filename="library.json"):
        try:
            if os.path.exists(filename):
                with open(filename, "r", encoding="utf-8") as f:
                    data = json.load(f)
                    self.books = [Book.from_dict(book) for book in data]
                print(f"üîÉ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {filename}")
            else:
                print("üÜï –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É")
        except FileNotFoundError:
            print("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
        except json.JSONDecodeError:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –ø–æ–≤—Ä–µ–∂–¥—ë–Ω")
        except Exception as e:
            print(f"üî• –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")

def main():
    lib = Library()
    
    while True:
        print("\n" + "="*30)
        print("1. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É")
        print("2. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏")
        print("="*30)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-3): ")
        
        if choice == "1":
            print("\n–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏:")
            name = input("–ù–∞–∑–≤–∞–Ω–∏–µ: ").strip()
            author = input("–ê–≤—Ç–æ—Ä: ").strip()
            year = input("–ì–æ–¥: ").strip()
            if name and author and year:
                lib.new_book(Book(name, author, year))
            else:
                print("‚ö†Ô∏è –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
        
        elif choice == "2":
            if not lib.books:
                print("‚ö†Ô∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞!")
            else:
                book_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
                if book_name:
                    lib.del_book(book_name)
        
        elif choice == "3":
            lib.show_books()
        
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!")

if __name__ == "__main__":
    main()
        else:
            print("\n–û—à–∏–±–∫–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 3")
